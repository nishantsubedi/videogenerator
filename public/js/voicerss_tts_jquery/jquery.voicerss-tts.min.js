jQuery.extend({
    speech:function(e){
        this._validate(e),this._request(e)
    },
    _validate:function(e){
        if(!e)throw"The settings are undefined";
        if(!e.key)throw"The API key is undefined";
        if(!e.src)throw"The text is undefined";
        if(!e.hl)throw"The language is undefined";
        if(e.c&&"auto"!=e.c.toLowerCase()){
            var a=!1;
            switch(e.c.toLowerCase()){
                case"mp3":a=(new Audio).canPlayType("audio/mpeg").replace("no","");
                break;
                case"wav":a=(new Audio).canPlayType("audio/wav").replace("no","");
                break;
                case"aac":a=(new Audio).canPlayType("audio/aac").replace("no","");
                break;
                case"ogg":a=(new Audio).canPlayType("audio/ogg").replace("no","");
                break;
                case"caf":a=(new Audio).canPlayType("audio/x-caf").replace("no","")
            }
            if(!a)throw"The browser does not support the audio codec "+e.c}
    },
    _request:function(e){
        $.ajax({
            type:"POST",
            url:"https://api.voicerss.org/",
            contentType:"application/x-www-form-urlencoded; charset=UTF-8",
            data:this._buildRequest(e),
            dataType:"text",
            success:function(e,a,c){
                if(0==e.indexOf("ERROR")){
                    console.error('synthesize failed:', error);
                    $('#progresstext').text('FAILED TO SYNTHESIZE TEXT');
                    $('.lds-dual-ring').toggle();
                    $('#generate').removeAttr("disabled")
                }
                else {
                  
                   
                    $('#progresstext').text('');
                    // $('#progresstext').text('Your Content is Ready');
                    $('#generate').toggle();
                    $('#title').toggle();
                    $('#generate').removeAttr("disabled")
                   
                    window.audio = new Audio(e);
                    console.log('audio stored in window.audio,',window.audio.duration);
                    var initial_timer = setInterval(function(){
                        $('.lds-dual-ring').toggle();
                        $("#video").toggle();
                        var sec_num = window.audio.duration; // don't forget the second param
                        var hours   = Math.floor(sec_num / 3600);
                        var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
                        var seconds = sec_num - (hours * 3600) - (minutes * 60);
        
                        console.log(hours,minutes,seconds,sec_num);
                        if(hours == 0){
                            $('.timer span').text('0:00 / ' + minutes + ':' + Math.floor(seconds).pad());
                        } else {
                            $('.timer span').text('0:00:00 / ' + hours+ ':' + minutes + ':' + Math.floor(seconds).pad());
                        }
                        clearInterval(initial_timer);
                    },2000);
                   
                    
                    
                }
                // new Audio(e).play()
                // console.log(e)
               
                // $("#audio source").attr("src", e);
            }
        })
    },
    _buildRequest:function(e){
        var a=e.c&&"auto"!=e.c.toLowerCase()?e.c:this._detectCodec();
        return"key="+(e.key||"")+"&src="+(e.src||"")+"&hl="+(e.hl||"")+"&r="+(e.r||"")+"&c="+(a||"")+"&f="+(e.f||"")+"&ssml="+(e.ssml||"")+"&b64=true"
    },
    _detectCodec:function(){
        var e=new Audio;
        return e.canPlayType("audio/mpeg").replace("no","")?"mp3":e.canPlayType("audio/wav").replace("no","")?"wav":e.canPlayType("audio/aac").replace("no","")?"aac":e.canPlayType("audio/ogg").replace("no","")?"ogg":e.canPlayType("audio/x-caf").replace("no","")?"caf":""
    }
    
});